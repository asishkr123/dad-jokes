{"version":3,"sources":["Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["Joke","getColor","votes","_this","props","getEmoji","_this2","this","react_default","a","createElement","className","onClick","handleVote","id","style","borderColor","text","Component","JokeList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getJokes","asyncToGenerator","regenerator_default","mark","_callee","jokes","res","wrap","_context","prev","next","length","numJokesToGet","axios","get","headers","Accept","sent","seenJokes","has","data","joke","push","setState","st","isLoading","concat","toConsumableArray","window","localStorage","setItem","JSON","stringify","state","t0","alert","stop","handleClick","delta","newJokes","map","j","i","objectSpread","parse","getItem","Set","src","alt","sort","b","src_Joke_0","key","defaultProps","App","src_JokeList_0","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af31b2cf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Joke.css';\n\nclass Joke extends Component {\n\tgetColor = () => {\n\t\tconst votes = this.props.votes;\n\n\t\tif (votes >= 15) {\n\t\t\treturn '#4CAF50';\n\t\t} else if (votes >= 12) {\n\t\t\treturn '#8BC34A';\n\t\t} else if (votes >= 9) {\n\t\t\treturn '#CDDC39';\n\t\t} else if (votes >= 6) {\n\t\t\treturn '#FFEB3B';\n\t\t} else if (votes >= 3) {\n\t\t\treturn '#FFC107';\n\t\t} else if (votes >= 0) {\n\t\t\treturn '#FF9800';\n\t\t} else {\n\t\t\treturn '#F44336';\n\t\t}\n\t};\n\n\tgetEmoji = () => {\n\t\tconst votes = this.props.votes;\n\n\t\tif (votes >= 15) {\n\t\t\treturn 'em em-rolling_on_the_floor_laughing';\n\t\t} else if (votes >= 12) {\n\t\t\treturn 'em em-laughing';\n\t\t} else if (votes >= 9) {\n\t\t\treturn 'em em-smiley';\n\t\t} else if (votes >= 6) {\n\t\t\treturn 'em em-slightly_smiling_face';\n\t\t} else if (votes >= 3) {\n\t\t\treturn 'em em-neutral_face';\n\t\t} else if (votes >= 0) {\n\t\t\treturn 'em em-confused';\n\t\t} else {\n\t\t\treturn 'em em-angry';\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Joke\">\n\t\t\t\t<div className=\"Joke-button\">\n\t\t\t\t\t<i className=\"fas fa-arrow-up\" onClick={() => this.props.handleVote(this.props.id, 1)} />\n\t\t\t\t\t<span className=\"Joke-votes\" style={{ borderColor: this.getColor() }}>\n\t\t\t\t\t\t{this.props.votes}\n\t\t\t\t\t</span>\n\t\t\t\t\t<i className=\"fas fa-arrow-down\" onClick={() => this.props.handleVote(this.props.id, -1)} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Joke-text\">{this.props.text}</div>\n\t\t\t\t<div className=\"Joke-smiley\">\n\t\t\t\t\t<i className={this.getEmoji()} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Joke;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './JokeList.css';\nimport Joke from './Joke';\n\nclass JokeList extends Component {\n\tstatic defaultProps = {\n\t\tnumJokesToGet: 10\n\t};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t\tjokes: JSON.parse(window.localStorage.getItem('jokes') || '[]')\n\t\t};\n\t\tthis.seenJokes = new Set(this.state.jokes.text);\n\t}\n\n\tasync componentDidMount() {\n\t\tif (this.state.jokes.length === 0) this.setState({ isLoading: true }, this.getJokes);\n\t}\n\n\tgetJokes = async () => {\n\t\ttry {\n\t\t\tconst jokes = [];\n\t\t\twhile (jokes.length < this.props.numJokesToGet) {\n\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com/', {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json'\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (!this.seenJokes.has(res.data.joke)) {\n\t\t\t\t\tjokes.push({\n\t\t\t\t\t\ttext: res.data.joke,\n\t\t\t\t\t\tvotes: 0\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setState(\n\t\t\t\t(st) => ({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tjokes: [ ...jokes, ...st.jokes ]\n\t\t\t\t}),\n\t\t\t\t() => window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\n\t\t\t);\n\t\t} catch (error) {\n\t\t\talert(error);\n\t\t\tthis.setState({ isLoading: false });\n\t\t}\n\t};\n\n\thandleClick = () => {\n\t\tthis.setState({ isLoading: true }, this.getJokes);\n\t};\n\n\thandleVote = (id, delta) => {\n\t\tconst { jokes } = this.state;\n\t\tconst newJokes = jokes.map((j, i) => (i === id ? { ...j, votes: j.votes + delta } : j));\n\t\tthis.setState({ jokes: newJokes }, () => window.localStorage.setItem('jokes', JSON.stringify(newJokes)));\n\t};\n\n\trender() {\n\t\tif (this.state.isLoading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"spinner\">\n\t\t\t\t\t<i className=\"far fa-8x fa-laugh fa-spin\" />\n\t\t\t\t\t<h1>Loading...</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"JokeList\">\n\t\t\t\t<div className=\"JokeList-sidebar\">\n\t\t\t\t\t<h3 className=\"JokeList-title\">\n\t\t\t\t\t\t<span>Dad</span> Jokes {this.state.jokes.length}\n\t\t\t\t\t</h3>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\"\n\t\t\t\t\t\talt=\"l\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"JokeList-getmore\" onClick={this.handleClick}>\n\t\t\t\t\t\tNew Jokes\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"JokeList-jokes\">\n\t\t\t\t\t{this.state.jokes\n\t\t\t\t\t\t.sort((a, b) => b.votes - a.votes)\n\t\t\t\t\t\t.map((j, i) => (\n\t\t\t\t\t\t\t<Joke id={i} key={i} text={j.text} votes={j.votes} handleVote={this.handleVote} />\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JokeList;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport JokeList from './JokeList';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<JokeList />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}